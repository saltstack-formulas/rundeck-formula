# -*- coding: utf-8 -*-
# vim: ft=jinja

{%- set tplroot = tpldir.split('/')[0] %}
{%- import_yaml tplroot ~ "/defaults.yaml" as default_settings %}
{%- import_yaml tplroot ~ "/osfamilymap.yaml" as osfamilymap %}

{#- Retrieve the config dict only once #}
{%- set _config = salt['config.get'](tplroot, default={}) %}

{%- set defaults = salt['grains.filter_by'](
      default_settings,
      default=tplroot,
      merge=salt['grains.filter_by'](
        osfamilymap,
        grain='os_family',
          merge=salt['grains.filter_by'](
          _config,
          default='lookup'
        )
      )
    )
%}

{%- set config = salt['grains.filter_by'](
      {'defaults': defaults},
      default='defaults',
      merge=_config
    )
%}

{%- if config.pkg.use_upstream|lower == 'war' and 'war' in config.pkg %}
    {%- if grains.os == 'Windows' %}
        {%- do config.pkg.update({'path': config.dir.base ~ "\\webapps\\"}) %}
    {%- else %}
        {%- do config.pkg.update({ 'path': '%s/rundeck-%s/webapps/'|format(config.dir.base, config.pkg.version) }) %}
    {%- endif %}
    {%- set url = '%s/rundeck-%s.%s'|format(config.pkg.uri_w, config.pkg.version, 'war') %}
    {%- if 'source_hash' in config.pkg.war and config.pkg.war.source_hash %}
        {%- do config.pkg.war.update({ 'source_hash': config.pkg.war.source_hash}) %}
    {%- else %}
        {%- do config.pkg.war.update({ 'source_hash': url ~ '.asc'}) %}
    {%- endif %}
    {%- do config.pkg.war.update({ 'source': url}) %}
{%- endif %}

{%- set rundeck = config %}
